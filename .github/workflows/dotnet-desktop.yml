name: Test .NET Framework Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [ Debug ]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Examples\GroupDocs.Viewer.Examples.CSharp.sln       # Replace with your solution name, i.e. MyWpfApp.sln.
      Wap_Project_Path: Examples\GroupDocs.Viewer.Examples.CSharp.Framework\GroupDocs.Viewer.Examples.CSharp.Framework.csproj  # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@2008f912f56e61277eefaac6d1888b750582aa16
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
 
    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.0.5

    # Restore Nuget packages
    - name: Restore the application
      run: nuget restore $env:Solution_Name

    # Build application
    - name: Build
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}